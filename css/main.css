:root {
  --error: #e00a24;
  --warn: #ffc145;
  --text-color: #5b5f97;
  --base-color: #b8b8d1;
}

button,
button:hover {
  transition: 0.3s;
  cursor: pointer;
}

html {
  font-family: "Rubik", sans-serif;
}

.header {
  background: var(--base-color);
  padding: 4rem 0;
  color: var(--text-color);
}

.header .container {
  display: flex;
  align-items: center;
  flex-direction: column;
  gap: 3rem;
}

.header-title {
  font-weight: 600;
  margin: 0;
  line-height: 1;
}

#search-form {
  display: flex;
  justify-content: center;
  width: 100%;
  gap: 1rem;
  align-items: center;
}

#search-form input {
  outline: none;
  border-radius: 5rem;
  border: none;
  padding: 0.5rem 1rem;
  width: min(50%, 25rem);
  font-size: 1rem;
  color: inherit;

  &::placeholder {
    color: inherit;
    opacity: 0.5;
  }
}

#search-form button {
  border-radius: 5rem;
  border: none;
  background: #fff;
  color: inherit;
  font-size: 1rem;
  padding: 0.5rem 1rem;
  transition: 0.3s;
  font-weight: 500;
}

#search-form label {
  font-size: 1.5rem;
  font-weight: 500;
}

#search-form button:hover {
  transform: scale(0.9);
  transition: 0.3s;
}

.main {
  padding: 5rem 0;
}

.currentPage{
  text-align: center;
  color: var(--text-color);
  display: none;
}

.results {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
}

.results .error {
  grid-column: 1 / -1;
  text-align: center;
  background: var(--error);
  color: #fff;
  font-size: 2rem;
  font-weight: 600;
  padding: 2rem;
  border-radius: 50rem;
  margin: 0;

  &.warn {
    background: var(--warn);
    color: var(--text-color);
  }

  span {
    font-size: 1rem;
    display: block;
  }
}

.result {
  background: #f7f7f7;
  padding: 1rem;
  border-radius: 1rem;
  overflow: hidden;
  text-decoration: none;
  display: flex;
  flex-direction: column;
  transition: 0.3s;
  transition-property: box-shadow;
  gap: 1rem;
}

.result p {
  margin: 0;
}

.cocktail {
  outline: none;
  border: none;
  aspect-ratio: 1/1;
  border-radius: 1rem;
  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.25);
  cursor: pointer;
  position: relative;
  padding: 1rem;

  &:hover {
    transform: scale(0.95);
  }

  span {
    position: absolute;
    bottom: 1rem;
    left: 50%;
    transform: translate(-50%, 0);
    max-width: calc(100% - 2rem);
    width: max-content;
    background: var(--text-color);
    color: #fff;
    font-size: 1.25rem;
    padding: 0.5rem 1rem;
    border-radius: 1rem;
    pointer-events: none;
  }
}

#dialog {
  border: none;
  border-radius: 1rem;
  width: min(30rem, calc(100% - 3rem));
  padding: 0;
  overflow: hidden;

  &::backdrop {
    background: rgba(0, 0, 0, 0.5);
  }
}

.dialog__body {
  display: grid;

  & > .close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 2rem;
    aspect-ratio: 1/1;
    outline: none;
    border: none;
    background: none;
    padding: 0;

    svg {
      width: 100%;
      height: 100%;
      fill: #000;
      pointer-events: none;
    }
  }

  .image {
    aspect-ratio: 4 / 3;
    overflow: hidden;

    img {
      width: 100%;
      height: auto;
      object-fit: cover;
    }
  }

  .tutorial{
    padding: 1.5rem 1.5rem 0;
    font-size: 1.25rem;
  }
}

.dialog__btns {
  display: grid;
  gap: 0.5rem;
  padding: 0 1.5rem 1.5rem;

  .btn {
    border-radius: 10rem;
    padding: 0.5rem 1rem;
    border: none;
    outline: none;
    color: #fff;
    font-size: 1rem;
    background: var(--text-color);

    &.danger {
      background: var(--error);
    }

    &.remove {
      background: #333;
    }

    &:hover {
      transform: scale(0.95);
    }
  }
}

#loader {
  position: fixed;
  z-index: 1000;
  width: 4rem;
  aspect-ratio: 1/1;
  bottom: 4rem;
  right: 4rem;
  display: none;

  animation: spinner 1s infinite linear;

  svg {
    width: 100%;
    height: 100%;
    fill: var(--text-color);
  }
}

@keyframes spinner {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}

@media only screen and (min-width: 45em) {
  .results {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }
}

@media only screen and (min-width: 62em) {
  .results {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
  }
}
